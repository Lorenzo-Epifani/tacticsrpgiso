[gd_scene load_steps=17 format=3 uid="uid://b422lvsp0j5gy"]

[ext_resource type="Shader" path="res://assets/outline.gdshader" id="1_uxqqv"]
[ext_resource type="Texture2D" uid="uid://cqga3121e3gsi" path="res://assets/pg/races/bangaa/defender/defender_.png" id="2_dm436"]

[sub_resource type="GDScript" id="GDScript_dnbi4"]
script/source = "extends Node

@onready var BASE_UNIT 
@onready var soft_stat 
@onready var orient 
@onready var position 
@onready var meta 
@onready var equip 
@onready var chosen_skills 
@onready var char2d = $BattleUnit2D  
@onready var sprite = $BattleUnit2D/Sprite2D  # Riferimento diretto al nodo BattleData
@onready var portrait
@onready var team
@onready var id #AUTOGENERATE FOR ENEMIES
@onready var party_member
# Called when the node enters the scene tree for the first time.
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  #LA POSITION QUI è DA INTENDERE IN COORDINATE TILE, LA POSITION DEL BUNIT2d E DELLO SPRITE IN COORDINATE SU SCHERMO!
  #LA POSITION QUI è DA INTENDERE IN COORDINATE TILE, LA POSITION DEL BUNIT2d E DELLO SPRITE IN COORDINATE SU SCHERMO!
  #LA POSITION QUI è DA INTENDERE IN COORDINATE TILE, LA POSITION DEL BUNIT2d E DELLO SPRITE IN COORDINATE SU SCHERMO!
  #LA POSITION QUI è DA INTENDERE IN COORDINATE TILE, LA POSITION DEL BUNIT2d E DELLO SPRITE IN COORDINATE SU SCHERMO!
  #LA POSITION QUI è DA INTENDERE IN COORDINATE TILE, LA POSITION DEL BUNIT2d E DELLO SPRITE IN COORDINATE SU SCHERMO!
  #LA POSITION QUI è DA INTENDERE IN COORDINATE TILE, LA POSITION DEL BUNIT2d E DELLO SPRITE IN COORDINATE SU SCHERMO!
func __initialize(_soft_stat, _position, _meta, _chosen_skills={}, _equip=[], _orient=Global.orient.SOUTH, _team=Global.team.ENEMY):
	soft_stat = _soft_stat
	soft_stat['act_hp'] = soft_stat['hp']
	position = _position
	meta = _meta
	chosen_skills = _chosen_skills
	equip = _equip
	team = _team
	orient = _orient
	id=Global.uuids()
	portrait = Global.rc_2_portrait(meta['race'],meta['class_'])
	
func __from_party_member(character_node, _position, _orient=Global.orient.SOUTH):
	party_member = character_node
	var c_n = character_node
	position = _position
	orient = _orient
	
	meta = c_n.meta
	soft_stat = c_n.stats
	chosen_skills = c_n.chosen_skills
	equip = c_n.equip
	id=c_n.id
	
	if c_n.portrait==\"\":
		portrait = Global.rc_2_portrait(meta['race'],meta['class_'])
	else:
		portrait = c_n['portrait']
	team = Global.team.MY
	soft_stat['act_hp'] = soft_stat['hp']
	
func from_dataclass(unit_dataclass, _position, _team = Global.team.MY, _orient=Global.orient.SOUTH):
	BASE_UNIT = unit_dataclass.duplicate()
	var udc = unit_dataclass
	position = _position
	orient = _orient
	meta = udc.meta #name,class,race
	soft_stat = udc.stats
	chosen_skills = udc.chosen_skills
	equip = udc.equip
	id=udc.id
	
	if not udc.portrait:
		portrait = Global.rc_2_portrait(meta['race'],meta['class_'])
	else:
		portrait = udc['portrait']
	team = _team
	soft_stat['act_hp'] = soft_stat['hp']
"

[sub_resource type="GDScript" id="GDScript_0jybh"]
script/source = "extends Node
@onready var an_player = $Sprite2D/AnimationPlayer
@onready var sprite = $Sprite2D  # Assicurati che il percorso sia corretto
@onready var portrait: String =\"\"
@onready var spritesheet_path: String=\"\"

func _ready():
	var position = get_parent().position
	var class_ = get_parent().meta['class_']
	var race = get_parent().meta['race']
	var world_xy = Global.g2w(position.x,position.y)
	if !class_ or !race:
		race=\"bangaa\"
		class_=\"gladiator\"
	sprite.position = Vector2i(world_xy[0], world_xy[1])  
	sprite.offset.y = Global.TH/2  
	spritesheet_path = \"res://assets/pg/races/{race}/{class}/{class}_.png\".format({\"race\": race,\"class\":class_})
	sprite.texture = load(spritesheet_path)  # Cambia solo la texture
	#Global.generate_pg()
	#sprite.visible=true
	#playy(\"walk\")
	

	
func walk_if_not():
	var ap = get_node(\"Sprite2D/AnimationPlayer\")
	if !ap.is_playing():
		playy(\"walk\")


func playy(anim_name):
	var orient = get_parent().orient
	if !orient:
		orient = Global.orient.SOUTH
	match orient:
		Global.orient.EAST:
			sprite.flip_h=true
		Global.orient.SOUTH:
			sprite.flip_h=false
		Global.orient.NORTH:
			sprite.flip_h=true
			anim_name=anim_name+\"_b\"
		Global.orient.WEST:
			sprite.flip_h=false
			anim_name=anim_name+\"_b\"

	an_player.play(anim_name)  # Avvia l'animazione
func show():
	sprite.visible=true
	
func hide():
	sprite.visible=false
	
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_7vs7s"]
shader = ExtResource("1_uxqqv")
shader_parameter/color = Color(0, 0, 1, 1)
shader_parameter/width = 0.0
shader_parameter/pattern = 0
shader_parameter/inside = false
shader_parameter/add_margins = false
shader_parameter/number_of_images = Vector2(1, 1)

[sub_resource type="GDScript" id="GDScript_5chbf"]
script/source = "extends Sprite2D


# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	#TODO ZINDEX HANDLING
	z_index = position.y+100
"

[sub_resource type="Animation" id="Animation_6o427"]
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(1, 1)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath(".:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0, 0)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath(".:offset")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0, 0)]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath(".:frame_coords")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [Vector2i(1, 0)]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath(".:material:shader_parameter/width")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}

[sub_resource type="Animation" id="Animation_hpvqr"]
resource_name = "attack"
length = 0.37
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame_coords")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.2, 0.3),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [Vector2i(0, 2), Vector2i(1, 2), Vector2i(2, 2)]
}

[sub_resource type="Animation" id="Animation_cohmy"]
resource_name = "attack_b"
length = 0.37
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame_coords")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.2, 0.3),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [Vector2i(3, 2), Vector2i(4, 2), Vector2i(5, 2)]
}

[sub_resource type="Animation" id="Animation_y254s"]
resource_name = "cast"
length = 0.5
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame_coords")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [Vector2i(0, 1)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:material:shader_parameter/width")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.0001, 0.0333333),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [1.0, 0.0, 2.0]
}

[sub_resource type="Animation" id="Animation_yemjn"]
resource_name = "cast_b"
length = 0.5
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame_coords")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [Vector2i(4, 1)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:material:shader_parameter/width")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.0001, 0.0333333),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [1.0, 0.0, 2.0]
}

[sub_resource type="Animation" id="Animation_msj2q"]
resource_name = "charge"
length = 0.15
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [6]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.0333333, 0.15458, 0.165988, 0.2, 0.30458),
"transitions": PackedFloat32Array(1, 1.81458e-05, 1.81458e-05, 1, 1.81458e-05, 1.81458e-05),
"update": 0,
"values": [Vector2(1, 1), Vector2(1.2, 1.2), Vector2(1, 1), Vector2(1.2, 1.2), Vector2(1, 1), Vector2(1.2, 1.2)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = false
tracks/2/path = NodePath(".:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0.1, 0.2),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector2(98, 98), Vector2(97, 98)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = false
tracks/3/path = NodePath(".:offset")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0.0001, 0.03, 0.06, 0.09, 0.12, 0.15),
"transitions": PackedFloat32Array(1, 1e-05, 0.000976563, 0.000383097, 1e-05, 1e-05),
"update": 0,
"values": [Vector2(0, 0), Vector2(1, 1), Vector2(-1, 0), Vector2(0, -1), Vector2(2, 0), Vector2(-1, -1)]
}

[sub_resource type="Animation" id="Animation_ea0hp"]
resource_name = "charge_b"
length = 0.15
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.0333333, 0.15458, 0.165988, 0.2, 0.30458),
"transitions": PackedFloat32Array(1, 1.81458e-05, 1.81458e-05, 1, 1.81458e-05, 1.81458e-05),
"update": 0,
"values": [Vector2(1, 1), Vector2(1.2, 1.2), Vector2(1, 1), Vector2(1.2, 1.2), Vector2(1, 1), Vector2(1.2, 1.2)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [7]
}

[sub_resource type="Animation" id="Animation_xfcp4"]
resource_name = "walk"
length = 1.2
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.3, 0.6, 0.9),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [1, 0, 1, 2]
}

[sub_resource type="Animation" id="Animation_exqm5"]
resource_name = "walk_b"
length = 1.2
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.3, 0.6, 0.9),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [4, 3, 4, 5]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_yaaty"]
_data = {
"RESET": SubResource("Animation_6o427"),
"attack": SubResource("Animation_hpvqr"),
"attack_b": SubResource("Animation_cohmy"),
"cast": SubResource("Animation_y254s"),
"cast_b": SubResource("Animation_yemjn"),
"charge": SubResource("Animation_msj2q"),
"charge_b": SubResource("Animation_ea0hp"),
"walk": SubResource("Animation_xfcp4"),
"walk_b": SubResource("Animation_exqm5")
}

[node name="BattleUnit" type="Node"]
script = SubResource("GDScript_dnbi4")

[node name="BattleUnit2D" type="Node2D" parent="."]
y_sort_enabled = true
script = SubResource("GDScript_0jybh")

[node name="Sprite2D" type="Sprite2D" parent="BattleUnit2D"]
y_sort_enabled = true
material = SubResource("ShaderMaterial_7vs7s")
texture = ExtResource("2_dm436")
hframes = 32
vframes = 32
frame = 1
region_filter_clip_enabled = true
script = SubResource("GDScript_5chbf")

[node name="AnimationPlayer" type="AnimationPlayer" parent="BattleUnit2D/Sprite2D"]
libraries = {
"": SubResource("AnimationLibrary_yaaty")
}
