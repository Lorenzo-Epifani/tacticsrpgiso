[gd_scene load_steps=6 format=3 uid="uid://c5jdsdlt1palp"]

[ext_resource type="Texture2D" uid="uid://n6dwsfvubynx" path="res://assets/ui/battle_ui/InspectTilePanel.png" id="2_ynkis"]

[sub_resource type="GDScript" id="GDScript_515iq"]
script/source = "extends Node

var depl_tiles = [ Vector2i(3,4),Vector2i(4,4),Vector2i(4,3),Vector2i(3,3)] # LO PRENDI DALLA CONFIG DELLA BATTAGLÃ§IA
var party = GameSession.data['party']
# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	var data_grid = get_parent().get_parent().get_node(\"DataGrid\")  # Assicurati che il nome sia corretto
	for loc in depl_tiles:
		if data_grid.grid_data.get(loc,null)==null:
			data_grid.grid_data[loc]={
				\"deployable\"=true,
				\"statics\"=null,
				\"terrain\"=null,
				\"unit\"=null
			}
		else:
			data_grid.grid_data[loc]['deployable'] = true
	
	var h_layer = get_parent().get_parent().get_node(\"HLayer\")
	h_layer.reload_tiles()
# Called every frame. 'delta' is the elapsed time since the previous frame.
func update_deploy_info(cursor_content):
	var deploy_info_ui = find_child(\"DeployHandler\", true, false)
	#deploy_info_ui.update_deploy_info(cursor_content)
	deploy_info_ui.update_deploy_info()
	
func _process(delta: float) -> void:
	pass
"

[sub_resource type="GDScript" id="GDScript_jxbrb"]
script/source = "extends Control

@onready var deploy_ui = $DeployUIContainer
# Called when the node enters the scene tree for the first time.
var hover_deploy=false
var deploy_index=0
var deployable = GameSession.data['party']
func _ready() -> void:
	pass # Replace with function body.

func update_deploy_info():
	var cursor_content = get_node(\"/root/Game/EventContainer/BaseFight/CursorNode2D\").cursor_content
	if cursor_content.get(\"deployable\",false):
		hover_deploy=true
		deploy_ui.show(GameSession.data['party'][deploy_index])
	else:
		deploy_ui.hide()
		hover_deploy=false
		

func _input(event):
	if hover_deploy:
		if event is InputEventKey and event.pressed:
			match event.keycode:
				KEY_TAB:
					if deployable.size()-1>deploy_index: deploy_index+=1
					else: deploy_index=0
				KEY_Z:
					print(\"deploy\")#TODO
# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	pass
"

[sub_resource type="GDScript" id="GDScript_aox20"]
script/source = "extends Node

@onready var texture_port = $TextureRect

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	pass # Replace with function body.

func show(party_member):
	var race=party_member['meta_stats']['razza']
	var class_=party_member['meta_stats']['classe']
	texture_port.texture = load(Global.rc_2_portrait(race, class_))
	texture_port.size = Vector2(300, 300)  # Imposta una dimensione esatta in pixel
	texture_port.position = Vector2(430, 200)  # Posiziona la texture a (X=100, Y=200)
	propagate_call(\"set_visible\", [true])
	
func hide():
	propagate_call(\"set_visible\", [false])

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	pass
"

[sub_resource type="StyleBoxTexture" id="StyleBoxTexture_na22p"]
texture = ExtResource("2_ynkis")
modulate_color = Color(1, 1, 1, 0.588235)

[node name="DeployPhase" type="CanvasLayer"]
script = SubResource("GDScript_515iq")

[node name="DeployHandler" type="Control" parent="."]
layout_mode = 3
anchors_preset = 0
script = SubResource("GDScript_jxbrb")

[node name="DeployUIContainer" type="Node" parent="DeployHandler"]
script = SubResource("GDScript_aox20")

[node name="PanelContainer" type="PanelContainer" parent="DeployHandler/DeployUIContainer"]
visible = false
z_as_relative = false
custom_minimum_size = Vector2(300, 300)
offset_left = 250.0
offset_top = 300.0
offset_right = 750.0
offset_bottom = 600.0
theme_override_styles/panel = SubResource("StyleBoxTexture_na22p")

[node name="Position" type="Label" parent="DeployHandler/DeployUIContainer/PanelContainer"]
layout_mode = 2

[node name="Class" type="Label" parent="DeployHandler/DeployUIContainer/PanelContainer"]
layout_mode = 2

[node name="TextureRect" type="TextureRect" parent="DeployHandler/DeployUIContainer"]
offset_left = 250.0
offset_top = 300.0
offset_right = 750.0
offset_bottom = 600.0
expand_mode = 1
